- hosts: localhost
  connection: local
  become: false  # No sudo needed for most tasks

  vars:
    homebrew_packages:
      - git
      - openjdk
      - wget
      - neovim
      - mysql
      - node
      - nginx
      - maven
      - jq
      - curl
      - cmake
      - eza
      - fd
      - git-delta
      - gh
      - gtk4
      - htop
      - yt-dlp
      - tmux
      - tmuxinator
      - tmuxinator-completion
      - docker
      - docker-completion 
      - fzf
      - llvm
      - python
      - pipx
    homebrew_casks:
      - alacritty
      - font-0xproto-nerd-font
      - font-anonymice-nerd-font
    projects_folder: "~/Projects"

  tasks:
    - name: Check if Xcode Command Line Tools are installed
      shell: "xcode-select -p"
      register: xcode_check
      ignore_errors: yes

    - name: Install Xcode Command Line Tools if not installed
      shell: "xcode-select --install"
      when: xcode_check.rc != 0

    - name: Wait for Xcode Command Line Tools installation to complete
      shell: "until xcode-select -p &>/dev/null; do sleep 5; done"
      when: xcode_check.rc != 0

    - name: Ensure Homebrew is installed
      community.general.homebrew:
        state: present

    - name: Install Homebrew formulae
      community.general.homebrew:
        name: "{{ item }}"
        state: present
      loop: "{{ homebrew_packages }}"

    - name: Install Homebrew cask applications
      community.general.homebrew_cask:
        name: "{{ item }}"
        state: present
      loop: "{{ homebrew_casks }}"

    - name: Add Homebrew taps
      homebrew_tap:
        name: "{{ item }}"
        state: present
      loop:
        - homebrew/cask
        - homebrew/core
        - adoptopenjdk/openjdk
        - keaz/homebrew
    
    - name: Check if Rust is already installed
      ansible.builtin.stat:
        path: ~/.cargo/bin/rustup
      register: rustup_installed

    - name: Install Rust using rustup (stable by default)
      ansible.builtin.shell: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      when: not rustup_installed.stat.exists

    - name: Install Rust nightly toolchain
      ansible.builtin.shell: |
        source $HOME/.cargo/env && rustup install nightly
      args:
        executable: /bin/bash

    - name: Set Rust nightly as default (optional)
      ansible.builtin.shell: |
        source $HOME/.cargo/env && rustup default nightly
      args:
        executable: /bin/bash

    - name: Show active Rust version
      ansible.builtin.shell: |
        source $HOME/.cargo/env && rustc --version
      args:
        executable: /bin/bash
      register: rust_version
      changed_when: false

    - name: Display installed Rust version
      ansible.builtin.debug:
        msg: "Active Rust version: {{ rust_version.stdout }}"

    - name: Create Projects directory
      file:
        path: "{{ projects_folder }}"
        state: directory

    - name: Run clone_and_organize.zsh
      shell: ./clone_and_organize.zsh
      args:
        executable: /bin/zsh
      environment:
        GITHUB_TOKEN: "{{ lookup('env', 'GITHUB_TOKEN') }}"
